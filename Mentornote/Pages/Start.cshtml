@page
@model Mentornote.Pages.Shared.StartModel
@{
    // Layout = "_Layout";
    Layout = "StartNav";
}
<div class="header">
    <div>
        <section>
            <h1>Dashboard</h1>
        </section>

        <button id="menu-btn" class="menu-btn">☰</button>
    </div>
</div>
<div class="startpagecont">
    <div class="fun-cards">

        <div class="fun-card">
            <div class="card-content">
                <p class="card-title">Study Notes</p>
                <h2>@Model.NotesList.Count</h2>
                <p class="card-word">Uploaded Notes</p>
            </div>
            <span class="card-icon bg-blue"><img src="https://img.icons8.com/?size=24&id=Yj5svDsC4jQA&format=png" /></span>
        </div>

        <div class="fun-card">
            <div class="card-content">
                <p class="card-title">FlashCards</p>
                <h2>@Model.FlashcardSets.Count()</h2>
                <p class="card-word">Generated Cards</p>
            </div>
            <span class="icon bg-purple"><img src="https://img.icons8.com/?size=24&id=Yj5svDsC4jQA&format=png" /></span>
        </div>

        <div class="fun-card">
            <div class="card-content">
                <p class="card-title">Study Streak</p>
                <h2>7 days</h2>
                <p class="card-word">Practice exams</p>
            </div>
            <span class="icon bg-orange"><img src="https://img.icons8.com/?size=24&id=Yj5svDsC4jQA&format=png" /></span>
        </div>
    </div>

    <div class="start-con-holder"> 
        <form name="Notesform" method="post" class="notes-form">
            @Html.AntiForgeryToken() <!-- Required for Razor Pages -->
            <div class="notes-cards-container">
                <p class="cont-head">Recent Activity </p>
                @foreach (var note in @Model.NotesList)
                {
                    <div class="note-card">
                        <div class="note-left">
                            <div class="icon-circle">
                                <img src="https://img.icons8.com/ios-filled/20/3b82f6/book.png" alt="Book Icon" />
                            </div>
                            <div class="note-text">
                                <strong>@note.Title</strong>
                                <p class="timestamp">@note.UserId</p>
                            </div>
                        </div>

                        <div class="note-right">
                           @*  <a href="/Functionalities/FlashCards?flashcardSetId=@flashcardset.Id" class="tag note-tag">View Card</a> *@
                            <a href="/Preview?noteId=@note.Id" class="tag note-tag">View Card</a>

                            <svg onmouseover="togglePopup(this)" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="black" viewBox="0 0 24 24" class="kebab-img">
                                <circle cx="12" cy="5" r="2" />
                                <circle cx="12" cy="12" r="2" />
                                <circle cx="12" cy="19" r="2" />
                            </svg>

                            <div class="popup-menu hidden">
                                <button type="submit" name="Submit" value="Rename-@note.Id" class="popup-btn">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="popup-icon" viewBox="0 0 24 24" width="16" height="16" fill="currentColor">
                                        <path d="M4 21h4.586L20.293 9.293a1 1 0 0 0 0-1.414l-4.172-4.172a1 1 0 0 0-1.414 0L4 15.586V21zM5.414 17L15 7.414l1.586 1.586L7 18.586H5.414V17z" />
                                    </svg>
                                    Edit Title                    
                                </button>
                                <button type="submit" name="Submit" value="Delete-@note.Id" class="popup-btn">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="popup-icon" viewBox="0 0 24 24" width="16" height="16" fill="currentColor">
                                        <path d="M6 7h12v13a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2V7zm3 3v7h2v-7H9zm4 0v7h2v-7h-2z" />
                                        <path d="M18 4h-3.5l-1-1h-3l-1 1H6v2h12V4z" />
                                    </svg>
                                    Delete
                                </button>
                            </div>
                        </div>
                      
                    </div>

                }
                @if (Model.NotesList.Count == 0)
                {                 
                    <p class="empty-list">You have no Notes Yet Upload a File to Make Some!!</p>
                }
                <!-- Popup Menu -->
                <div class="popup-menu hidden" id="startpopup">
                    <button onclick="renameCard(this)">Rename</button>
                    <button onclick="deleteCard(this)">Delete</button>
                </div>
            </div>
        </form>
        
    </div>
</div>

<script>
     // loading animation
    function showLoadingBar() {
        console.log('Blaawskcm')
        const overlay = document.getElementById("overlay");
        if (overlay) { 
            console.log('founfff')
            overlay.style.display = 'flex';
        } else {
            console.log("Overlay not found");
        }
        return true;
    }

    // pop up effect
    // Toggle popup specific to clicked kebab icon
    function togglePopup(iconElement) {
        // Close all open popups
        document.querySelectorAll('.popup-menu').forEach(p => p.classList.add('hidden'));

        const popup = iconElement.nextElementSibling; // assumes popup is right after icon
        if (popup && popup.classList.contains('popup-menu')) {
            popup.classList.toggle('hidden');
        }
    }

    // Optional: close popup if user clicks outside
    document.addEventListener("click", function (e) {
        if (!e.target.closest(".notes-contols")) {
            document.querySelectorAll('.popup-menu').forEach(p => p.classList.add('hidden'));
        }
    });
</script>
